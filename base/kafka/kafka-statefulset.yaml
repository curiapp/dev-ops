apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    service: kafka
  name: kafka
spec:
  serviceName: kafka
  replicas: 1
  selector:
    matchLabels:
      service: kafka
  template:
    metadata:
      labels:
        # network/kafka-network: "true"
        service: kafka
    spec: 
      securityContext:
        fsGroup: 1000
      enableServiceLinks: false
      initContainers:
      - name: wait-for-zookeeper
        image: busybox
        command: ['sh', '-c', 'until nc -z zookeeper 2182; do sleep 2; done']

      containers:
      - name: kafka
        image: confluentinc/cp-kafka:7.0.1
        ports:
          - containerPort: 29093
          - containerPort: 9093
        env:
          - name: KAFKA_ADVERTISED_LISTENERS
            value: "INTERNAL://:29093,LISTENER_EXTERNAL://:9093"
          - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
            value: "true"
          - name: KAFKA_INTER_BROKER_LISTENER_NAME
            value: "INTERNAL"
          - name: KAFKA_LISTENERS
            value: "INTERNAL://:29093,LISTENER_EXTERNAL://:9093"
          - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
            value: "INTERNAL:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "zookeeper:2182"
        volumeMounts:
          - mountPath: /var/lib/kafka/
            name: kafka-data
      hostname: kafka
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        volumeName: pdqa-kafka-pv-volume
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi


---

apiVersion: v1
kind: Service
metadata: 
  labels:
    service: kafka
  name: kafka
spec: 
  clusterIP: None
  selector: 
    service: kafka
  ports: 
    - name: internal
      port: 29093
      targetPort: 29093
    - name: external
      port: 9093
      targetPort: 9093 
